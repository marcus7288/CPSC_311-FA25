<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Systems Concept Explorer</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(45deg, #1e3c72, #2a5298);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .nav-tabs {
            display: flex;
            background: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
        }
        
        .nav-tab {
            flex: 1;
            padding: 15px;
            text-align: center;
            background: #f8f9fa;
            border: none;
            cursor: pointer;
            font-weight: bold;
            color: #495057;
            transition: all 0.3s;
        }
        
        .nav-tab.active {
            background: white;
            color: #1e3c72;
            border-bottom: 3px solid #1e3c72;
        }
        
        .tab-content {
            display: none;
            padding: 30px;
            min-height: 500px;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .concept-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .concept-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            transition: transform 0.3s;
        }
        
        .concept-card:hover {
            transform: translateY(-5px);
        }
        
        .concept-card h3 {
            margin-bottom: 15px;
            font-size: 1.3em;
        }
        
        .concept-card p {
            line-height: 1.6;
            margin-bottom: 15px;
        }
        
        .example-box {
            background: rgba(255,255,255,0.1);
            padding: 15px;
            border-radius: 8px;
            border-left: 4px solid rgba(255,255,255,0.3);
        }
        
        .interactive-demo {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            border: 2px solid #dee2e6;
            margin: 20px 0;
        }
        
        .demo-input {
            width: 100%;
            max-width: 300px;
            padding: 10px;
            border: 2px solid #1e3c72;
            border-radius: 5px;
            margin: 10px 5px;
            font-size: 16px;
        }
        
        .demo-button {
            background: #1e3c72;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px 5px;
            font-size: 16px;
        }
        
        .demo-output {
            background: #d4edda;
            padding: 15px;
            border-radius: 5px;
            margin-top: 15px;
            border-left: 4px solid #28a745;
            min-height: 50px;
        }
        
        .sdlc-phase {
            background: white;
            border: 2px solid #1e3c72;
            border-radius: 10px;
            padding: 20px;
            margin: 15px 0;
            position: relative;
            overflow: hidden;
        }
        
        .phase-number {
            position: absolute;
            top: -10px;
            left: 20px;
            background: #1e3c72;
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 18px;
        }
        
        .methodology-comparison {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 20px;
        }
        
        .methodology-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 25px;
            border-radius: 10px;
        }
        
        .methodology-card h4 {
            margin-bottom: 15px;
            font-size: 1.2em;
        }
        
        .methodology-card ul {
            list-style: none;
            padding-left: 0;
        }
        
        .methodology-card li {
            margin-bottom: 8px;
            padding-left: 20px;
            position: relative;
        }
        
        .methodology-card li:before {
            content: "‚úì";
            position: absolute;
            left: 0;
            color: #4CAF50;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üîß Systems Concept Explorer</h1>
            <p>Interactive Learning Tool for Chapter 1 Concepts</p>
        </div>
        
        <div class="nav-tabs">
            <button class="nav-tab active" onclick="showTab('systems')">Systems Fundamentals</button>
            <button class="nav-tab" onclick="showTab('sdlc')">SDLC Phases</button>
            <button class="nav-tab" onclick="showTab('methodologies')">Methodologies</button>
            <button class="nav-tab" onclick="showTab('demo')">Interactive Demo</button>
        </div>
        
        <div id="systems" class="tab-content active">
            <h2>üèóÔ∏è Information Systems Fundamentals</h2>
            
            <div class="concept-grid">
                <div class="concept-card">
                    <h3>üìä What is a System?</h3>
                    <p>A system is a collection of interrelated components that work together toward a common goal.</p>
                    <div class="example-box">
                        <strong>Example:</strong> A university registration system combines students, courses, schedules, and rules to manage enrollment.
                    </div>
                </div>
                
                <div class="concept-card">
                    <h3>üíª Information System</h3>
                    <p>A combination of hardware, software, data, networks, and people that organizations use to collect, filter, process, create, and distribute information.</p>
                    <div class="example-box">
                        <strong>Example:</strong> Canvas LMS processes student submissions, grades, and communication.
                    </div>
                </div>
                
                <div class="concept-card">
                    <h3>üîÑ Input-Process-Output (IPO)</h3>
                    <p>The fundamental model showing how systems transform inputs into outputs through processing.</p>
                    <div class="example-box">
                        <strong>Example:</strong> ATM: Input (card + PIN) ‚Üí Process (verify account) ‚Üí Output (cash + receipt)
                    </div>
                </div>
                
                <div class="concept-card">
                    <h3>üîÅ Feedback Loop</h3>
                    <p>Information about outputs that is returned to the input to influence future processing.</p>
                    <div class="example-box">
                        <strong>Example:</strong> Online shopping recommendations based on previous purchases.
                    </div>
                </div>
                
                <div class="concept-card">
                    <h3>üåê System Environment</h3>
                    <p>Everything outside the system boundary that can affect the system's operation.</p>
                    <div class="example-box">
                        <strong>Example:</strong> Government regulations affecting a payroll system.
                    </div>
                </div>
                
                <div class="concept-card">
                    <h3>üë• Stakeholders</h3>
                    <p>All individuals and groups who are affected by or can influence the system.</p>
                    <div class="example-box">
                        <strong>Example:</strong> Students, faculty, administrators, parents, and employers for a student information system.
                    </div>
                </div>
            </div>
        </div>
        
        <div id="sdlc" class="tab-content">
            <h2>üîÑ Systems Development Life Cycle (SDLC)</h2>
            
            <div class="sdlc-phase">
                <div class="phase-number">1</div>
                <h3>üìã Planning Phase</h3>
                <p><strong>Purpose:</strong> Identify and prioritize information system needs</p>
                <p><strong>Key Activities:</strong> Project identification, feasibility analysis, project planning</p>
                <p><strong>Deliverables:</strong> Project charter, feasibility study, project plan</p>
            </div>
            
            <div class="sdlc-phase">
                <div class="phase-number">2</div>
                <h3>üîç Analysis Phase</h3>
                <p><strong>Purpose:</strong> Understand current system and define requirements for new system</p>
                <p><strong>Key Activities:</strong> Requirements gathering, current system analysis, requirements specification</p>
                <p><strong>Deliverables:</strong> Requirements document, system proposal</p>
            </div>
            
            <div class="sdlc-phase">
                <div class="phase-number">3</div>
                <h3>üé® Design Phase</h3>
                <p><strong>Purpose:</strong> Convert requirements into detailed system specifications</p>
                <p><strong>Key Activities:</strong> Logical design, physical design, interface design</p>
                <p><strong>Deliverables:</strong> System design specifications, database design, interface prototypes</p>
            </div>
            
            <div class="sdlc-phase">
                <div class="phase-number">4</div>
                <h3>‚öôÔ∏è Implementation Phase</h3>
                <p><strong>Purpose:</strong> Build, test, and deploy the new system</p>
                <p><strong>Key Activities:</strong> Programming, testing, installation, user training</p>
                <p><strong>Deliverables:</strong> Working system, documentation, trained users</p>
            </div>
            
            <div class="sdlc-phase">
                <div class="phase-number">5</div>
                <h3>üîß Maintenance Phase</h3>
                <p><strong>Purpose:</strong> Keep the system operating and improve it over time</p>
                <p><strong>Key Activities:</strong> Bug fixes, enhancements, performance monitoring</p>
                <p><strong>Deliverables:</strong> System updates, maintenance documentation</p>
            </div>
        </div>
        
        <div id="methodologies" class="tab-content">
            <h2>‚ö° Development Methodologies</h2>
            
            <div class="methodology-comparison">
                <div class="methodology-card">
                    <h4>üìö Traditional (Waterfall)</h4>
                    <p>Sequential approach where each phase is completed before moving to the next.</p>
                    <h5>Characteristics:</h5>
                    <ul>
                        <li>Extensive documentation</li>
                        <li>Predictive planning</li>
                        <li>Sequential phases</li>
                        <li>Formal reviews</li>
                        <li>Comprehensive testing</li>
                    </ul>
                    <h5>Best for:</h5>
                    <ul>
                        <li>Well-understood requirements</li>
                        <li>Stable technology</li>
                        <li>Large, complex projects</li>
                        <li>Regulatory compliance</li>
                    </ul>
                </div>
                
                <div class="methodology-card">
                    <h4>üöÄ Agile</h4>
                    <p>Iterative approach emphasizing collaboration, working software, and response to change.</p>
                    <h5>Characteristics:</h5>
                    <ul>
                        <li>Short iterations (sprints)</li>
                        <li>Working software frequently</li>
                        <li>Customer collaboration</li>
                        <li>Adaptive planning</li>
                        <li>Cross-functional teams</li>
                    </ul>
                    <h5>Best for:</h5>
                    <ul>
                        <li>Changing requirements</li>
                        <li>Small to medium projects</li>
                        <li>Experienced teams</li>
                        <li>Time-to-market critical</li>
                    </ul>
                </div>
            </div>
            
            <div class="interactive-demo">
                <h3>ü§î Methodology Selection Quiz</h3>
                <p>Answer these questions to see which methodology might be better for different scenarios:</p>
                
                <div id="quiz-area">
                    <div id="question-1" class="quiz-question">
                        <p><strong>1. Project requirements are:</strong></p>
                        <button class="demo-button" onclick="answerQuiz(1, 'traditional')">Well-defined and stable</button>
                        <button class="demo-button" onclick="answerQuiz(1, 'agile')">Likely to change during development</button>
                    </div>
                </div>
                
                <div id="quiz-results" class="demo-output" style="display: none;">
                    <h4>Quiz Results:</h4>
                    <div id="quiz-score"></div>
                </div>
            </div>
        </div>
        
        <div id="demo" class="tab-content">
            <h2>üéÆ Interactive System Demo</h2>
            
            <div class="interactive-demo">
                <h3>üè™ Simple Order Processing System</h3>
                <p>Experience the Input-Process-Output model with this interactive demo:</p>
                
                <h4>Inputs:</h4>
                <input type="text" class="demo-input" id="customerName" placeholder="Customer Name">
                <input type="text" class="demo-input" id="productName" placeholder="Product Name">
                <input type="number" class="demo-input" id="quantity" placeholder="Quantity">
                <input type="number" class="demo-input" id="price" placeholder="Price per unit">
                
                <br>
                <button class="demo-button" onclick="processOrder()">Process Order</button>
                <button class="demo-button" onclick="clearOrder()">Clear</button>
                
                <div id="orderOutput" class="demo-output">
                    Processing results will appear here...
                </div>
            </div>
            
            <div class="interactive-demo">
                <h3>üîÑ System Feedback Simulator</h3>
                <p>See how feedback loops work in systems:</p>
                
                <input type="text" class="demo-input" id="searchTerm" placeholder="Enter a search term">
                <button class="demo-button" onclick="simulateSearch()">Search</button>
                
                <div id="searchResults" class="demo-output">
                    Search results and recommendations will appear here...
                </div>
                
                <div id="recommendations" class="demo-output" style="background: #fff3cd; border-left-color: #ffc107;">
                    Personalized recommendations based on your search history...
                </div>
            </div>
        </div>
    </div>

    <script>
        let quizAnswers = {};
        let searchHistory = [];

        function showTab(tabName) {
            // Hide all tabs
            const tabs = document.querySelectorAll('.tab-content');
            const buttons = document.querySelectorAll('.nav-tab');
            
            tabs.forEach(tab => tab.classList.remove('active'));
            buttons.forEach(button => button.classList.remove('active'));
            
            // Show selected tab
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
        }

        function processOrder() {
            const customerName = document.getElementById('customerName').value;
            const productName = document.getElementById('productName').value;
            const quantity = parseInt(document.getElementById('quantity').value) || 0;
            const price = parseFloat(document.getElementById('price').value) || 0;
            
            if (!customerName || !productName || quantity <= 0 || price <= 0) {
                document.getElementById('orderOutput').innerHTML = 
                    '<strong>‚ùå Processing Failed:</strong> Please fill in all fields with valid values.';
                return;
            }
            
            // Processing simulation
            const total = quantity * price;
            const tax = total * 0.08;
            const grandTotal = total + tax;
            const orderNumber = Math.floor(Math.random() * 10000) + 1000;
            
            document.getElementById('orderOutput').innerHTML = `
                <strong>‚úÖ Order Processed Successfully!</strong><br>
                <strong>Input Data:</strong><br>
                - Customer: ${customerName}<br>
                - Product: ${productName}<br>
                - Quantity: ${quantity}<br>
                - Unit Price: $${price.toFixed(2)}<br><br>
                <strong>Processing Results:</strong><br>
                - Order Number: #${orderNumber}<br>
                - Subtotal: $${total.toFixed(2)}<br>
                - Tax (8%): $${tax.toFixed(2)}<br>
                - <strong>Total: $${grandTotal.toFixed(2)}</strong><br><br>
                <strong>Output:</strong> Order confirmation sent to customer
            `;
        }

        function clearOrder() {
            document.getElementById('customerName').value = '';
            document.getElementById('productName').value = '';
            document.getElementById('quantity').value = '';
            document.getElementById('price').value = '';
            document.getElementById('orderOutput').innerHTML = 'Processing results will appear here...';
        }

        function simulateSearch() {
            const searchTerm = document.getElementById('searchTerm').value.toLowerCase();
            
            if (!searchTerm) {
                document.getElementById('searchResults').innerHTML = 
                    '<strong>‚ö†Ô∏è Please enter a search term</strong>';
                return;
            }
            
            // Add to search history
            searchHistory.push(searchTerm);
            
            // Simulate search results
            const mockResults = [
                `${searchTerm} - Official Website`,
                `Best ${searchTerm} Reviews 2024`,
                `How to use ${searchTerm} effectively`,
                `${searchTerm} vs alternatives`,
                `${searchTerm} tutorial for beginners`
            ];
            
            document.getElementById('searchResults').innerHTML = `
                <strong>üîç Search Results for "${searchTerm}":</strong><br>
                ${mockResults.map((result, index) => `${index + 1}. ${result}`).join('<br>')}
            `;
            
            // Generate recommendations based on search history
            generateRecommendations();
        }

        function generateRecommendations() {
            const recentSearches = searchHistory.slice(-3);
            const recommendations = [];
            
            recentSearches.forEach(term => {
                recommendations.push(`Related to "${term}": Advanced ${term} techniques`);
                recommendations.push(`People who searched "${term}" also searched: ${term} alternatives`);
            });
            
            document.getElementById('recommendations').innerHTML = `
                <strong>üí° Personalized Recommendations (Feedback Loop):</strong><br>
                ${recommendations.slice(0, 4).join('<br>')}<br><br>
                <small>Your search history: ${searchHistory.join(', ')}</small>
            `;
        }

        function answerQuiz(questionNum, answer) {
            quizAnswers[questionNum] = answer;
            
            // Add more questions dynamically
            if (questionNum === 1) {
                document.getElementById('quiz-area').innerHTML += `
                    <div id="question-2" class="quiz-question" style="margin-top: 20px;">
                        <p><strong>2. Project timeline is:</strong></p>
                        <button class="demo-button" onclick="answerQuiz(2, 'traditional')">Long-term with fixed deadlines</button>
                        <button class="demo-button" onclick="answerQuiz(2, 'agile')">Short iterations with flexible scope</button>
                    </div>
                `;
            } else if (questionNum === 2) {
                // Show results
                showQuizResults();
            }
        }

        function showQuizResults() {
            const traditionalScore = Object.values(quizAnswers).filter(a => a === 'traditional').length;
            const agileScore = Object.values(quizAnswers).filter(a => a === 'agile').length;
            
            let recommendation = '';
            if (traditionalScore > agileScore) {
                recommendation = '<strong>üèóÔ∏è Traditional/Waterfall Methodology</strong><br>Your scenario suggests a traditional approach with comprehensive planning and documentation.';
            } else if (agileScore > traditionalScore) {
                recommendation = '<strong>üöÄ Agile Methodology</strong><br>Your scenario suggests an agile approach with iterative development and flexibility.';
            } else {
                recommendation = '<strong>ü§ù Hybrid Approach</strong><br>Your scenario suggests combining elements of both traditional and agile methodologies.';
            }
            
            document.getElementById('quiz-score').innerHTML = recommendation;
            document.getElementById('quiz-results').style.display = 'block';
        }
    </script>
</body>
</html>
