<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personal Systems Inventory Tool</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }
        
        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }
        
        .content {
            padding: 30px;
        }
        
        .section {
            margin-bottom: 30px;
            padding: 20px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            background: #f8f9fa;
        }
        
        .section h3 {
            color: #667eea;
            margin-bottom: 15px;
            font-size: 1.3em;
        }
        
        .system-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .system-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #667eea;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .system-card h4 {
            color: #333;
            margin-bottom: 10px;
        }
        
        .system-input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            font-size: 14px;
        }
        
        .system-textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            font-size: 14px;
            min-height: 80px;
            resize: vertical;
        }
        
        .btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s;
            margin: 10px 5px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }
        
        .export-area {
            background: #f1f3f4;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            border: 2px dashed #667eea;
        }
        
        .system-counter {
            display: inline-block;
            background: #667eea;
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: bold;
            margin-left: 10px;
        }
        
        .analysis-questions {
            background: #e8f4f8;
            padding: 20px;
            border-radius: 8px;
            border-left: 4px solid #17a2b8;
            margin-top: 20px;
        }
        
        .analysis-questions h4 {
            color: #17a2b8;
            margin-bottom: 15px;
        }
        
        .analysis-questions ol {
            padding-left: 20px;
        }
        
        .analysis-questions li {
            margin-bottom: 10px;
            line-height: 1.6;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä Personal Systems Inventory</h1>
            <p>Week 1 Assignment 1.1 - Discovering Systems in Your Life</p>
        </div>
        
        <div class="content">
            <div class="section">
                <h3>üîç Instructions</h3>
                <p>Complete this comprehensive inventory of the information systems you interact with daily. Think broadly about systems - they include apps, websites, software, and even manual processes that involve information collection, processing, and distribution.</p>
                
                <div class="analysis-questions">
                    <h4>Consider These Categories:</h4>
                    <ol>
                        <li><strong>Academic Systems:</strong> Learning management systems, registration, library systems</li>
                        <li><strong>Personal Systems:</strong> Social media, banking, shopping, entertainment</li>
                        <li><strong>Communication Systems:</strong> Email, messaging, video conferencing</li>
                        <li><strong>Work Systems:</strong> HR systems, productivity tools, collaboration platforms</li>
                        <li><strong>Daily Life Systems:</strong> Transportation, healthcare, government services</li>
                    </ol>
                </div>
            </div>
            
            <div class="section">
                <h3>üìã System Inventory <span class="system-counter" id="systemCount">0 Systems</span></h3>
                <div class="system-grid" id="systemGrid">
                    <!-- Systems will be added dynamically -->
                </div>
                <button class="btn" onclick="addSystem()">+ Add New System</button>
            </div>
            
            <div class="section">
                <h3>ü§î Analysis Questions</h3>
                <div class="analysis-questions">
                    <h4>Reflect on Your Systems Inventory:</h4>
                    <ol>
                        <li>Which systems are most critical to your daily life? Why?</li>
                        <li>How do these systems collect, process, and output information?</li>
                        <li>What happens when these systems fail or are unavailable?</li>
                        <li>How do these systems integrate with each other?</li>
                        <li>What improvements would you suggest for these systems?</li>
                    </ol>
                </div>
                
                <textarea class="system-textarea" id="reflectionText" 
                    placeholder="Write your analysis here (minimum 300 words)..."></textarea>
            </div>
            
            <div class="section">
                <h3>üì§ Export Your Inventory</h3>
                <button class="btn" onclick="exportInventory()">Export as Text</button>
                <button class="btn" onclick="generateAnalysis()">Generate Analysis</button>
                
                <div class="export-area" id="exportArea" style="display: none;">
                    <h4>Your Systems Analysis Report:</h4>
                    <textarea id="exportText" readonly style="width: 100%; height: 200px; border: none; background: transparent; font-family: monospace;"></textarea>
                </div>
            </div>
        </div>
    </div>

    <script>
        let systems = [];
        let systemCounter = 0;

        function addSystem() {
            systemCounter++;
            const systemId = `system-${systemCounter}`;
            
            const systemCard = document.createElement('div');
            systemCard.className = 'system-card';
            systemCard.id = systemId;
            systemCard.innerHTML = `
                <h4>System ${systemCounter}</h4>
                <input type="text" class="system-input" placeholder="System Name (e.g., Canvas LMS)" data-field="name">
                <input type="text" class="system-input" placeholder="Category (e.g., Academic)" data-field="category">
                <textarea class="system-textarea" placeholder="Describe what this system does and how you use it..." data-field="description"></textarea>
                <input type="text" class="system-input" placeholder="Input (What data goes in?)" data-field="input">
                <input type="text" class="system-input" placeholder="Process (How is data processed?)" data-field="process">
                <input type="text" class="system-input" placeholder="Output (What information comes out?)" data-field="output">
                <button class="btn" style="background: #dc3545; font-size: 12px; padding: 8px 15px;" onclick="removeSystem('${systemId}')">Remove</button>
            `;
            
            document.getElementById('systemGrid').appendChild(systemCard);
            updateSystemCount();
        }

        function removeSystem(systemId) {
            const systemCard = document.getElementById(systemId);
            if (systemCard) {
                systemCard.remove();
                updateSystemCount();
            }
        }

        function updateSystemCount() {
            const count = document.querySelectorAll('.system-card').length;
            document.getElementById('systemCount').textContent = `${count} Systems`;
        }

        function collectSystemData() {
            const systemCards = document.querySelectorAll('.system-card');
            const systemsData = [];
            
            systemCards.forEach((card, index) => {
                const inputs = card.querySelectorAll('input, textarea');
                const systemData = { id: index + 1 };
                
                inputs.forEach(input => {
                    const field = input.getAttribute('data-field');
                    if (field) {
                        systemData[field] = input.value;
                    }
                });
                
                if (systemData.name) {
                    systemsData.push(systemData);
                }
            });
            
            return systemsData;
        }

        function exportInventory() {
            const systemsData = collectSystemData();
            const reflection = document.getElementById('reflectionText').value;
            
            let exportText = "PERSONAL SYSTEMS INVENTORY REPORT\\n";
            exportText += "Generated: " + new Date().toLocaleString() + "\\n";
            exportText += "="+ "=".repeat(50) + "\\n\\n";
            
            exportText += `TOTAL SYSTEMS IDENTIFIED: ${systemsData.length}\\n\\n`;
            
            systemsData.forEach((system, index) => {
                exportText += `SYSTEM ${index + 1}: ${system.name}\\n`;
                exportText += `Category: ${system.category}\\n`;
                exportText += `Description: ${system.description}\\n`;
                exportText += `Input: ${system.input}\\n`;
                exportText += `Process: ${system.process}\\n`;
                exportText += `Output: ${system.output}\\n`;
                exportText += "-".repeat(40) + "\\n\\n";
            });
            
            if (reflection) {
                exportText += "ANALYSIS AND REFLECTION:\\n";
                exportText += reflection + "\\n\\n";
            }
            
            document.getElementById('exportText').value = exportText;
            document.getElementById('exportArea').style.display = 'block';
        }

        function generateAnalysis() {
            const systemsData = collectSystemData();
            
            if (systemsData.length === 0) {
                alert('Please add at least one system before generating analysis.');
                return;
            }
            
            const categories = {};
            systemsData.forEach(system => {
                const cat = system.category || 'Uncategorized';
                categories[cat] = (categories[cat] || 0) + 1;
            });
            
            let analysis = "AUTOMATED ANALYSIS REPORT\\n";
            analysis += "=" + "=".repeat(30) + "\\n\\n";
            analysis += `Total Systems Analyzed: ${systemsData.length}\\n\\n`;
            
            analysis += "CATEGORY BREAKDOWN:\\n";
            Object.entries(categories).forEach(([category, count]) => {
                analysis += `- ${category}: ${count} systems\\n`;
            });
            analysis += "\\n";
            
            analysis += "SYSTEMS THINKING OBSERVATIONS:\\n";
            analysis += `- You interact with ${systemsData.length} different information systems\\n`;
            analysis += "- This demonstrates the interconnected nature of modern life\\n";
            analysis += "- Each system has inputs, processes, and outputs (IPO model)\\n";
            analysis += "- Systems integration affects your daily workflow\\n\\n";
            
            analysis += "NEXT STEPS FOR ASSIGNMENT:\\n";
            analysis += "1. Copy this report and your reflection\\n";
            analysis += "2. Submit via Canvas as Assignment 1.1\\n";
            analysis += "3. Be prepared to discuss patterns you discovered\\n";
            analysis += "4. Consider how system failures impact your activities\\n";
            
            document.getElementById('exportText').value = analysis;
            document.getElementById('exportArea').style.display = 'block';
        }

        // Initialize with one system
        addSystem();
    </script>
</body>
</html>
